read.csv("~/Documents/GitHub/AFAAQITC-Report/super_store/superstore.csv") %>% clean_names(.) %>% mutate(order_date=mdy(order_date)) %>% mutate(years=year(order_date),months=format(order_date,"%b"),monthn=month(order_date)) %>% group_by(years,months,monthn) %>% summarize(sales=sum(sales),.groups = "drop") %>%arrange(monthn) %>% select(years,months,sales) %>%
pivot_wider(id_cols = months,names_from = years,values_fill = FALSE,values_from = sales) %>% adorn_totals("col")%>%adorn_totals("row") %>%  gt() %>% cols_label_with(columns =everything() ,fn = toupper) %>% tab_header(title = "Sales Summary By Month/Year") %>%
tab_style(style = list(cell_fill("darkgray"),cell_text(weight = "bold")),locations = cells_title())%>%
tab_style(style = list(cell_fill("brown"),cell_text(color="white",weight = "bold")),locations = cells_column_labels()) %>% data_color(columns = 1,colors = "gray") %>% fmt_currency(columns = c(2:5),decimals = 2)
library(janitor)
library(gt)
library(dplyr)
library(tidyr)
library(lubridate)
dd<-read.csv("~/Documents/GitHub/AFAAQITC-Report/super_store/superstore.csv")
dd%>% clean_names(.) %>% mutate(order_date=mdy(order_date)) %>% mutate(years=year(order_date),months=format(order_date,"%b"),monthn=month(order_date)) %>% group_by(years,months,monthn) %>% summarize(sales=sum(sales),.groups = "drop") %>%arrange(monthn) %>% select(years,months,sales) %>%
pivot_wider(id_cols = months,names_from = years,values_fill = FALSE,values_from = sales) %>% adorn_totals("col")%>%adorn_totals("row") %>%  gt() %>% cols_label_with(columns =everything() ,fn = toupper) %>% tab_header(title = "Sales Summary By Month/Year") %>%
tab_style(style = list(cell_fill("darkgray"),cell_text(weight = "bold")),locations = cells_title())%>%
tab_style(style = list(cell_fill("brown"),cell_text(color="white",weight = "bold")),locations = cells_column_labels()) %>% data_color(columns = 1,colors = "gray") %>% fmt_currency(columns = c(2:5),decimals = 2)
library(janitor)
library(janitor)
library(gt)
library(dplyr)
library(tidyr)
library(lubridate)
dd<-read.csv("~/Documents/GitHub/AFAAQITC-Report/super_store/superstore.csv")
library(flexdashboard)
library(janitor)
library(tidyr)
library(dplyr)
library(lubridate)
library(formattable)
library(stringr)
library(fedmatch)
library(ggplot2)
library(plotly)
library(openxlsx)
library(readxl)
library(readODS)
library(DT)
setwd("~/Documents/GitHub/AFAAQITC-Report/coffee_shop/")
fi<-read.csv(file = "coffee.csv")
fi<-
fi %>% select(- 1) %>%mutate(date=as.POSIXct(datetime),dates=as.Date(datetime))%>%
mutate(years=year(dates),months=format(dates,"%b"),
week_month=paste0(format(dates,"%V"),"-",format(dates,"%b")),
weekn=format(dates,"%V"),days=weekdays(dates),hours=hour(datetime),
cash_n=case_when(cash_type=="card"~0,TRUE~1),card_n=case_when(cash_type=="card"~1,TRUE~0))
fi$card<-ifelse(fi$card=="","cash",fi$card)
#--------------------------------------------------------------------------------------------
daily_totals<-
fi %>% group_by(dates) %>% summarize(total=sum(money) ,
items=n(),card=sum(card_n),cash=sum(cash_n)) %>% arrange(dates ,by_group =TRUE) %>%
mutate(pct=(total/sum(fi$money))*100)
daily_totals_dt<-
daily_totals %>%arrange(dates) %>%
datatable(filter = "top",class = "hover row-border strip",
extensions =list(Buttons=TRUE) ,
options =list(dom="Bfrtip",buttons=c("excel","csv","pdf"),
columnDefs=list(list(className="dt-center",targets=1:6)))) %>%
formatCurrency(columns = 2,digits = 2) %>% formatPercentage(columns = 6,digits = 2)
month_totals_totals<-
fi %>%  group_by(months=factor(months,levels=c("Mar","Apr","May","Jun","Jul"))) %>%
summarize(orders=n(),cash=sum(cash_n),card=sum(card_n),sales=comma(sum(money)),
pct=(sum(money)/sum(fi$money))) %>% datatable(class="hover row-border ",
extensions = list(Buttons=TRUE),options = list(dom="Bfrtip",
buttons=c("csv","excel","pdf"),columnDefs=list(list(className="dt-center",targets=1:6)))) %>%
formatPercentage(columns = 6,digits = 2) %>% formatCurrency(columns = 5,digits = 2)
month_totals_chart<-
fi %>% mutate(mn=paste0(month(as.Date(datetime)),"-",months)) %>%
group_by(months=factor(months,levels=c("Mar","Apr","May","Jun","Jul"))) %>%
summarize(total=comma(sum(money)))  %>%
ggplot(aes(x=months,y=total,fill=months))+geom_bar(stat = "identity")+
geom_text(aes(label=comma(total,digits = 0)),size=3.5,fontface = "bold",color="white",position = position_stack(vjust = 0.5))+
theme_bw()+
scale_fill_brewer(palette = "Set1")+
theme(axis.text.x = element_text(face = "bold",colour = "black",size =11),
axis.text.y = element_text(face = "bold",colour = "black",size = 11))+
labs(x="",y="",
subtitle = paste0("Total: ",comma(sum(fi$money),2)," | ",
"Orders: ",sum(daily_totals$items)))+
scale_y_continuous(limits = c(0,10000))
#--------------------------------------------------------------------------------------------
week_totals<-
fi %>% group_by(week_month,days) %>%
summarize(total=sum(money)) %>%
pivot_wider(id_cols =week_month ,names_from =days ,values_from =total ,values_fill = FALSE) %>%
adorn_totals("col")%>%  mutate(pct=round((Total/sum(fi$money))*100,2)) %>%
select(week_month,Saturday,Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Total,pct)
week_totals_dt<-
week_totals %>% datatable(class = "hover row-border",
extensions = list(Buttons=TRUE),
options = list(dom="Bfrtip",buttons=c("csv","excel","pdf"),
columnDefs=list(list(className="dt-center",targets=1:10)))) %>%
formatPercentage(columns = 10,digits = 2) %>% formatCurrency(columns = c(2:9),digits = 2)
week_totals_chart<-
fi %>% group_by(dates=as.POSIXct(dates) ) %>% summarize(total=sum(money)) %>%
ggplot(aes(x=dates,y=total))+geom_line(color="#00b894")+
scale_x_datetime(date_labels = "%V-%b",date_breaks = "1 week")+theme_bw()+
scale_fill_brewer(palette = "Set1")+
theme(axis.text.x = element_text(face = "bold",colour = "black",size = 9),
axis.text.y = element_text(face = "bold",colour = "black",size = 9))+
labs(x="",y="",
subtitle = paste0("Total: ",comma(sum(fi$money),2)," | ",
"Orders: ",sum(daily_totals$items)))+geom_smooth(method = "lm",se = FALSE)
#-----------------------------------------------------------------------------------
item_totals<-
fi %>% group_by(coffee_name) %>%
summarize(orders=n(),card=sum(card_n),cash=sum(cash_n),total=round(sum(money),2),
pct=round((sum(money)/sum(fi$money))*100,2)) %>%
arrange(desc(total),by_group=TRUE)
item_totals_dt<-
item_totals %>% datatable(class = "hover row-border",extensions = list(Buttons=TRUE),
options = list(dom="Bfrtip",buttons=c("excel","csv","pdf"),
columnDefs=list(list(className="dt-center",targets=1:6)))) %>%
formatCurrency(columns =5 ,digits = 2) %>% formatPercentage(columns = 6,digits = 2)
item_totals_chart<-
item_totals %>% ggplot(aes(x=reorder(coffee_name,total),y=total,fill = coffee_name))+
geom_bar(stat = "identity")+
geom_text(aes(label=comma(total,digits = 2)),size=2.5,color="white",
position = position_stack(vjust = 0.5))+
labs(x="",y="",
subtitle = paste0("Total: ",comma(sum(fi$money),2)," | ",
"Orders: ",sum(daily_totals$items)))+
theme_bw()+scale_fill_brewer(palette = "Set1")+
theme(axis.text.x = element_text(face = "bold",colour = "black",size = 10),
axis.text.y = element_text(face = "bold",colour = "black",size = 8),legend.position = "none")+coord_flip()
#--------------------------------------------------------------------------------------------
pay_methods<-
fi %>% group_by(cash_type) %>%
summarize(orders=n(),card=sum(card_n),cash=sum(cash_n),total=sum(money),
pct=round((sum(money)/sum(fi$money))*100,2)) %>%
arrange(desc(total),by_group=TRUE)
pay_methods_dt<-
pay_methods%>%
datatable(class = "hover row-border",extensions = list(Buttons=TRUE),
options = list(dom="Bfrtip",buttons=c("excel","csv","pdf"),
columnDefs=list(list(className="dt-center",targets=1:6)))) %>%
formatCurrency(columns =5 ,digits = 2) %>% formatPercentage(columns = 6,digits = 2)
pay_methods_chart<-
fi %>% group_by(cash_type=as.factor(cash_type)) %>%
summarize(total=comma(sum(money),1)) %>%
ggplot(aes(x="",y=total,fill=cash_type))+geom_bar(stat = "identity")+
coord_polar(theta = "y")+theme_void()+
geom_text(aes(label=comma(total,digits = 2)),size=4.5,color="white",
position = position_stack(vjust = 0.5))+
scale_fill_brewer(palette = "Set1")+
labs(x="",y="",
subtitle = paste0("Total: ",comma(sum(fi$money),2)," | ",
"Orders: ",sum(daily_totals$items)))
#-----------------------------------------------------------------------------
days_totals<-
fi %>% group_by(days=factor(days,levels=c("Saturday","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday"))) %>%
summarize(orders=n(),total=sum(money),pct=(sum(money)/sum(fi$money)))
days_totals_dt<-
days_totals %>% adorn_totals("row")%>% datatable(class = "hover row-border",
extensions = list(Buttons=TRUE),
options = list(dom="Bfrtip",buttons=c("csv","excel","pdf"),
columnDefs=list(list(className="dt-center",targets=1:4)))) %>%
formatPercentage(columns = 4,digits = 2) %>% formatCurrency(columns = 3,digits = 2)
days_totals_chart<-
days_totals %>% mutate(profit=comma(total)) %>%
ggplot(aes(x=days,y=profit,fill = days))+geom_bar(stat = "identity")+
geom_text(aes(label=comma(profit,digits = 2)),size=4.5,color="white",
position = position_stack(vjust = 0.5))+
scale_fill_brewer(palette = "Set1")+
labs(x="",y="",
subtitle = paste0("Total: ",comma(sum(fi$money),2)," | ",
"Orders: ",sum(daily_totals$items)))+
theme_bw()+scale_fill_brewer(palette = "Set1")+
theme(axis.text.x = element_text(face = "bold",colour = "black",size = 9),
axis.text.y = element_text(face = "bold",colour = "black",size = 9),legend.position = "none")
valueBox(value = comma(sum(fi$money),digits = 2),caption ="Sales" ,icon ="fa fa-money" ,color ="#b2bec3" )
valueBox(value =sum(daily_totals$items),caption ="Orders" ,icon ="fa fa-shopping-cart" ,color ="#b2bec3" )
valueBox(value =nrow(daily_totals),caption ="Days" ,icon ="fa fa-calendar" ,color ="#b2bec3" )
item_totals_dt
ggplotly( item_totals_chart,width = 600)
valueBox(value =sum(daily_totals$card),caption ="Card" ,icon ="fa fa-credit-card-alt" ,color ="#b2bec3" )
valueBox(value =sum(daily_totals$cash),caption ="Cash" ,icon ="fa fa-money" ,color ="#b2bec3" )
pay_methods_dt
pay_methods_chart
month_totals_totals
ggplotly(month_totals_chart,width = 600)
week_totals_dt
ggplotly(week_totals_chart,width = 1000)
daily_totals_dt
days_totals_dt
ggplotly( days_totals_chart,width = 650)
fi %>% View(()
fi %>% View()
library(gt)
fi %>% summary()
fi %>% group_by(days,coffee_name) %>% summarize(sales=sum(money))
fi %>% group_by(days,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = days,values_from = sales,values_fill = FALSE)
fi %>% mutate(month=formart(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE)
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE)
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("row")
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("row") %>% adorn_totals("col")
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("row") %>% adorn_totals("col") %>% arrange(desc(Total))
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("row") %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months")
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("row") %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range")
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("row") %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("row") %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper) %>% data_color(columns = c(1),colors = "gray")
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray")
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2)
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title())
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =cell_fill("brown") ,locations = cells_column_labels())
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white")),locations = cells_column_labels())
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_column_labels())
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_column_labels()) %>% tab_style(style =cell_fill("gray") ,locations = cells_stubhead())
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_column_labels()) %>% tab_style(style =cell_fill("gray") ,locations = cells_column_spanners())
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_column_labels()) %>% tab_style(style =cell_fill("gray") ,locations = cells_column_spanners())
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_stub()) %>% tab_style(style =cell_fill("gray") ,locations = cells_column_spanners())
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_stub()) %>% tab_style(style =cell_fill("gray") ,locations = cells_column_spanners())
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_stub())
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_stub()) %>% opt_stylize(style = 3)
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_stub()) %>% opt_stylize(style = 3)
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_stub()) %>% opt_stylize(style = 2)
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_stub()) %>% opt_stylize(style = 1)
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_stub()) %>% opt_stylize(style = 1) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_column_spanners())
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_stub()) %>% opt_stylize(style = 5) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_column_spanners())
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_stub()) %>% opt_stylize(style = 4) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_column_spanners())
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_stub()) %>% opt_stylize(style = 1) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_column_spanners())
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_stub()) %>% opt_stylize(style = 1)
fi %>% mutate(month=format(dates,"%B"))%>% group_by(month,coffee_name) %>% summarize(sales=sum(money)) %>% pivot_wider(id_cols = coffee_name,names_from = month,values_from = sales,values_fill = FALSE) %>% select(coffee_name,March,April,May,June) %>% adorn_totals("col") %>% arrange(desc(Total)) %>% gt() %>% tab_header(title = "Total Items Sales By Months") %>% tab_spanner(columns = c(2:5),label = "Months Range") %>% cols_label_with(columns =everything() ,fn = toupper)%>% data_color(columns = c(1),colors = "gray") %>% fmt_currency(columns = c(2:6),decimals = 2) %>% tab_style(style =cell_fill("gray") ,locations = cells_title()) %>% tab_style(style =list(cell_fill("brown") ,cell_text(color="white",weight = "bold")),locations = cells_stub()) %>% opt_stylize(style = 3)
mtcars[,c(1,2,3,4)]
rep("data1",15)
data.frame(data=rep("data1",15),seq(11,len15,by=1)
data.frame(data=rep("data1",15),seq(11,len15,by=1))
data.frame(data=rep("data1",15),seq(11,len15,by=1))
data.frame(data=rep("data1",15),seq(11,len=15,by=1))
data.frame(data=rep("data1",15),salesseq(11,len=15,by=1))
data.frame(data=rep("data1",15),sales=seq(11,len=15,by=1))
# R Data Cleaning Script
df<-read.xlsx("~/Desktop/PowerBI/Blinkit Data/BlinkIT Grocery Data.xlsx")
library(pacman)
p_load("tidyr","dplyr","lubridate","formattable",
"data.table","stringr","gmodels","gt","DT","janitor","scales","ggplot2","plotly",
"GGally","openxlsx","forecast","tseries","readxl")
df<-read.xlsx("~/Desktop/PowerBI/Blinkit Data/BlinkIT Grocery Data.xlsx")
df<-
df %>% rename(fat_conternt=Item.Fat.Content,item_type=Item.Type,est_year=Outlet.Establishment.Year,
location=Outlet.Location.Type,size=Outlet.Size,outlet_type= Outlet.Type,item_vis= Item.Visibility,
weight=Item.Weight) %>%
mutate(fat_conternt=as.factor(ifelse(fat_conternt=="LF","Low Fat",ifelse(fat_conternt=="low fat","Low Fat",
ifelse(fat_conternt=="reg","Regular",fat_conternt))))) %>%
mutate(weight=ifelse(is.na(weight),0,weight),
item_type=as.factor(item_type),location=as.factor(location),size=as.factor(size),
outlet_type=as.factor(outlet_type)) %>%
select(fat_conternt,item_type,size,location,outlet_type,est_year,item_vis,weight,Sales,Rating)
df
df %>% reactable::reactable()
df %>%rename_with(.fn = toupper,.cols = everything()) %>% reactable::reactable()
# R Data Cleaning Script
library(pacman)
p_load("tidyr","dplyr","lubridate","formattable",
"data.table","stringr","gmodels","gt","DT","janitor","scales","ggplot2","plotly",
"GGally","openxlsx","forecast","tseries","readxl")
df<-read.xlsx("~/Desktop/PowerBI/Blinkit Data/BlinkIT Grocery Data.xlsx")
df<-
df %>% rename(fat_conternt=Item.Fat.Content,item_type=Item.Type,est_year=Outlet.Establishment.Year,
location=Outlet.Location.Type,size=Outlet.Size,outlet_type= Outlet.Type,item_vis= Item.Visibility,
weight=Item.Weight) %>%
mutate(fat_conternt=as.factor(ifelse(fat_conternt=="LF","Low Fat",ifelse(fat_conternt=="low fat","Low Fat",
ifelse(fat_conternt=="reg","Regular",fat_conternt))))) %>%
mutate(weight=ifelse(is.na(weight),0,weight),
item_type=as.factor(item_type),location=as.factor(location),size=as.factor(size),
outlet_type=as.factor(outlet_type)) %>%
select(fat_conternt,item_type,size,location,outlet_type,est_year,item_vis,weight,Sales,Rating)
df %>%rename_with(.fn = toupper,.cols = everything()) %>% gt()
#|fig-width: 300
#|fig-align: "center"
#|label: "Data Sample"
#|ffig-height: 300
#|
df %>%rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt()
r}
#|fig-width: 300
#|fig-align: "center"
#|label: "Data Sample"
#|ffig-height: 300
#|
df %>%rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt()
#|fig-width: 300
#|fig-align: "center"
#|ffig-height: 300
#|
df %>%rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt()
#|fig-width: 300
#|fig-align: "center"
#|label: "Clean Data R Script"
#|ffig-height: 300
library(pacman)
p_load("tidyr","dplyr","lubridate","formattable",
"data.table","stringr","gmodels","gt","DT","janitor","scales","ggplot2","plotly",
"GGally","openxlsx","forecast","tseries","readxl")
df<-read.xlsx("~/Desktop/PowerBI/Blinkit Data/BlinkIT Grocery Data.xlsx")
df<-
df %>% rename(fat_conternt=Item.Fat.Content,item_type=Item.Type,est_year=Outlet.Establishment.Year,
location=Outlet.Location.Type,size=Outlet.Size,outlet_type= Outlet.Type,item_vis= Item.Visibility,
weight=Item.Weight) %>%
mutate(fat_conternt=as.factor(ifelse(fat_conternt=="LF","Low Fat",ifelse(fat_conternt=="low fat","Low Fat",
ifelse(fat_conternt=="reg","Regular",fat_conternt))))) %>%
mutate(weight=ifelse(is.na(weight),0,weight),
item_type=as.factor(item_type),location=as.factor(location),size=as.factor(size),
outlet_type=as.factor(outlet_type)) %>%
select(fat_conternt,item_type,size,location,outlet_type,est_year,item_vis,weight,Sales,Rating)
#|fig-width: 300
#|fig-align: "center"
#|ffig-height: 300
#|
df %>%rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt()
#|fig-width: 300
#|fig-align: "center"
#|ffig-height: 300
df %>%rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt()
df %>% mutate(item_vis=round(item_vis),Sales=round(Sales))%>% rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt()
df %>% mutate(item_vis=round(item_vis),Sales=round(Sales,2))%>%
rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt()
df %>% mutate(item_vis=round(item_vis),Sales=round(Sales,2))%>%
rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt::gt()
#|fig-width: 300
#|fig-align: "center"
#|label: "Clean Data R Script"
#|ffig-height: 300
library(pacman)
p_load("tidyr","dplyr","lubridate","formattable",
"data.table","stringr","gmodels","gt","DT","janitor","scales","ggplot2","plotly",
"GGally","openxlsx","forecast","tseries","readxl")
df<-read.xlsx("~/Desktop/PowerBI/Blinkit Data/BlinkIT Grocery Data.xlsx")
df<-
df %>% rename(fat_conternt=Item.Fat.Content,item_type=Item.Type,est_year=Outlet.Establishment.Year,
location=Outlet.Location.Type,size=Outlet.Size,outlet_type= Outlet.Type,item_vis= Item.Visibility,
weight=Item.Weight) %>%
mutate(fat_conternt=as.factor(ifelse(fat_conternt=="LF","Low Fat",ifelse(fat_conternt=="low fat","Low Fat",
ifelse(fat_conternt=="reg","Regular",fat_conternt))))) %>%
mutate(weight=ifelse(is.na(weight),0,weight),
item_type=as.factor(item_type),location=as.factor(location),size=as.factor(size),
outlet_type=as.factor(outlet_type)) %>%
select(fat_conternt,item_type,size,location,outlet_type,est_year,item_vis,weight,Sales,Rating)
df %>% mutate(item_vis=round(item_vis),Sales=round(Sales,2))%>%
rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt()
#|fig-width: 300
#|fig-align: "center"
#|label: "Clean Data R Script"
#|ffig-height: 300
library(pacman)
p_load("tidyr","dplyr","lubridate","formattable",
"data.table","stringr","gmodels","gt","DT","janitor","scales","ggplot2","plotly",
"GGally","openxlsx","forecast","tseries","readxl")
df<-read.xlsx("~/Desktop/PowerBI/Blinkit Data/BlinkIT Grocery Data.xlsx")
df<-
df %>% rename(fat_conternt=Item.Fat.Content,item_type=Item.Type,est_year=Outlet.Establishment.Year,
location=Outlet.Location.Type,size=Outlet.Size,outlet_type= Outlet.Type,item_vis= Item.Visibility,
weight=Item.Weight) %>%
mutate(fat_conternt=as.factor(ifelse(fat_conternt=="LF","Low Fat",ifelse(fat_conternt=="low fat","Low Fat",
ifelse(fat_conternt=="reg","Regular",fat_conternt))))) %>%
mutate(weight=ifelse(is.na(weight),0,weight),
item_type=as.factor(item_type),location=as.factor(location),size=as.factor(size),
outlet_type=as.factor(outlet_type)) %>%
select(fat_conternt,item_type,size,location,outlet_type,est_year,item_vis,weight,Sales,Rating)
#|fig-width: 300
#|fig-align: "center"
#|ffig-height: 300
df %>% mutate(item_vis=round(item_vis),Sales=round(Sales,2))%>%
rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt()
#|fig-width: 300
#|fig-align: "center"
#|ffig-height: 300
library(pacman)
p_load("tidyr","dplyr","lubridate","formattable",
"data.table","stringr","gmodels","gt","DT","janitor","scales","ggplot2","plotly",
"GGally","openxlsx","forecast","tseries","readxl")
df<-read.xlsx("~/Desktop/PowerBI/Blinkit Data/BlinkIT Grocery Data.xlsx")
df<-
df %>% rename(fat_conternt=Item.Fat.Content,item_type=Item.Type,est_year=Outlet.Establishment.Year,
location=Outlet.Location.Type,size=Outlet.Size,outlet_type= Outlet.Type,item_vis= Item.Visibility,
weight=Item.Weight) %>%
mutate(fat_conternt=as.factor(ifelse(fat_conternt=="LF","Low Fat",ifelse(fat_conternt=="low fat","Low Fat",
ifelse(fat_conternt=="reg","Regular",fat_conternt))))) %>%
mutate(weight=ifelse(is.na(weight),0,weight),
item_type=as.factor(item_type),location=as.factor(location),size=as.factor(size),
outlet_type=as.factor(outlet_type)) %>%
select(fat_conternt,item_type,size,location,outlet_type,est_year,item_vis,weight,Sales,Rating)
#|fig-width: 300
#|fig-align: "center"
#|ffig-height: 300
df %>% mutate(item_vis=round(item_vis),Sales=round(Sales,2))%>%
rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt()
#|fig-width: 300
#|fig-align: "center"
#|ffig-height: 300
library(pacman)
p_load("tidyr","dplyr","lubridate","formattable",
"data.table","stringr","gmodels","gt","DT","janitor","scales","ggplot2","plotly",
"GGally","openxlsx","forecast","tseries","readxl")
df<-read.xlsx("~/Desktop/PowerBI/Blinkit Data/BlinkIT Grocery Data.xlsx")
df<-
df %>% rename(fat_conternt=Item.Fat.Content,item_type=Item.Type,est_year=Outlet.Establishment.Year,
location=Outlet.Location.Type,size=Outlet.Size,outlet_type= Outlet.Type,item_vis= Item.Visibility,
weight=Item.Weight) %>%
mutate(fat_conternt=as.factor(ifelse(fat_conternt=="LF","Low Fat",ifelse(fat_conternt=="low fat","Low Fat",
ifelse(fat_conternt=="reg","Regular",fat_conternt))))) %>%
mutate(weight=ifelse(is.na(weight),0,weight),
item_type=as.factor(item_type),location=as.factor(location),size=as.factor(size),
outlet_type=as.factor(outlet_type)) %>%
select(fat_conternt,item_type,size,location,outlet_type,est_year,item_vis,weight,Sales,Rating)
#|fig-width: 300
#|fig-align: "center"
#|ffig-height: 300
df %>% mutate(item_vis=round(item_vis),Sales=round(Sales,2))%>%
rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt()
#|fig-width: 300
#|fig-align: "center"
#|ffig-height: 300
library(pacman)
p_load("tidyr","dplyr","lubridate","formattable",
"data.table","stringr","gmodels","gt","DT","janitor","scales","ggplot2","plotly",
"GGally","openxlsx","forecast","tseries","readxl")
df<-read.xlsx("~/Desktop/PowerBI/Blinkit Data/BlinkIT Grocery Data.xlsx")
df<-
df %>% rename(fat_conternt=Item.Fat.Content,item_type=Item.Type,est_year=Outlet.Establishment.Year,
location=Outlet.Location.Type,size=Outlet.Size,outlet_type= Outlet.Type,item_vis= Item.Visibility,
weight=Item.Weight) %>%
mutate(fat_conternt=as.factor(ifelse(fat_conternt=="LF","Low Fat",ifelse(fat_conternt=="low fat","Low Fat",
ifelse(fat_conternt=="reg","Regular",fat_conternt))))) %>%
mutate(weight=ifelse(is.na(weight),0,weight),
item_type=as.factor(item_type),location=as.factor(location),size=as.factor(size),
outlet_type=as.factor(outlet_type)) %>%
select(fat_conternt,item_type,size,location,outlet_type,est_year,item_vis,weight,Sales,Rating)
#|fig-width: 300
#|fig-align: "center"
#|ffig-height: 300
df %>% mutate(item_vis=round(item_vis),Sales=round(Sales,2))%>%
rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt()
#|fig-width: 300
#|fig-align: "center"
#|ffig-height: 300
library(pacman)
p_load("tidyr","dplyr","lubridate","formattable",
"data.table","stringr","gmodels","gt","DT","janitor","scales","ggplot2","plotly",
"GGally","openxlsx","forecast","tseries","readxl")
df<-read.xlsx("~/Desktop/PowerBI/Blinkit Data/BlinkIT Grocery Data.xlsx")
df<-
df %>% rename(fat_conternt=Item.Fat.Content,item_type=Item.Type,est_year=Outlet.Establishment.Year,
location=Outlet.Location.Type,size=Outlet.Size,outlet_type= Outlet.Type,item_vis= Item.Visibility,
weight=Item.Weight) %>%
mutate(fat_conternt=as.factor(ifelse(fat_conternt=="LF","Low Fat",ifelse(fat_conternt=="low fat","Low Fat",
ifelse(fat_conternt=="reg","Regular",fat_conternt))))) %>%
mutate(weight=ifelse(is.na(weight),0,weight),
item_type=as.factor(item_type),location=as.factor(location),size=as.factor(size),
outlet_type=as.factor(outlet_type)) %>%
select(fat_conternt,item_type,size,location,outlet_type,est_year,item_vis,weight,Sales,Rating)
#|fig-width: 300
#|fig-align: "center"
#|ffig-height: 300
df %>% mutate(item_vis=round(item_vis),Sales=round(Sales,2))%>%
rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt()
![](1.PNG)
#|fig-width: 300
#|fig-align: "center"
#|ffig-height: 300
library(pacman)
p_load("tidyr","dplyr","lubridate","formattable",
"data.table","stringr","gmodels","gt","DT","janitor","scales","ggplot2","plotly",
"GGally","openxlsx","forecast","tseries","readxl")
df<-read.xlsx("~/Desktop/PowerBI/Blinkit Data/BlinkIT Grocery Data.xlsx")
df<-
df %>% rename(fat_conternt=Item.Fat.Content,item_type=Item.Type,est_year=Outlet.Establishment.Year,
location=Outlet.Location.Type,size=Outlet.Size,outlet_type= Outlet.Type,item_vis= Item.Visibility,
weight=Item.Weight) %>%
mutate(fat_conternt=as.factor(ifelse(fat_conternt=="LF","Low Fat",ifelse(fat_conternt=="low fat","Low Fat",
ifelse(fat_conternt=="reg","Regular",fat_conternt))))) %>%
mutate(weight=ifelse(is.na(weight),0,weight),
item_type=as.factor(item_type),location=as.factor(location),size=as.factor(size),
outlet_type=as.factor(outlet_type)) %>%
select(fat_conternt,item_type,size,location,outlet_type,est_year,item_vis,weight,Sales,Rating)
#|fig-width: 300
#|fig-align: "center"
#|ffig-height: 300
df %>% mutate(item_vis=round(item_vis),Sales=round(Sales,2))%>%
rename_with(.fn = toupper,.cols = everything()) %>%head(20) %>% gt()
library(DBI)
library(dplyr)
install.packages("RODBC")
install.packages("RODBCDBI")
library(RODBC)
library(RODBC)
exit
![](1.png)
rm(list = ls())
![](4.jpeg)
q
knitr::include_graphics("2024-12-10_00-02.png")
knitr::include_graphics("rep.png")
knitr::include_graphics("rep")
knitr::include_graphics("page.png")
knitr::include_graphics("2024-12-16_05-39.png")
knitr::include_graphics("2024-12-10_00-02.png")
knitr::include_graphics("2024-12-10_00-03.png")
knitr::include_graphics("rep")
knitr::include_graphics("rep.png")
knitr::include_graphics("page.png")
knitr::include_graphics("2024-12-16_05-39.png")
knitr::include_graphics("2024-12-10_00-02.png")
knitr::include_graphics("2024-12-10_00-03.png")
knitr::include_graphics("rep.png")
knitr::include_graphics("rep.png")
knitr::include_graphics("gbtc.png")
knitr::include_graphics("gbtc.png")
knitr::include_graphics("rep.png")
knitr::include_graphics("page.png")
knitr::include_graphics("2024-12-16_05-39.png")
knitr::include_graphics("2024-12-10_00-02.png")
knitr::include_graphics("2024-12-10_00-03.png")
knitr::include_graphics("gbtc.png")
knitr::include_graphics("rep.png")
